/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package pt.isel

import pt.isel.sample.Student
import pt.isel.sample.toStudent
import java.io.File
import java.nio.file.Files
import kotlin.io.path.toPath
import kotlin.streams.asSequence
import kotlin.test.Test
import kotlin.test.assertEquals

class Queries4Test {
    private val lae2022uri = ClassLoader.getSystemClassLoader().getResource("lae2022.txt").toURI()

    @Test fun `First surname of a Student with number greater than 4700 and first letter A`() {
        var count = 0
        val actual = File(lae2022uri)
            .readLines()
            .parseCsv(';')
            .convertLazy { count++; it.toObject<Student>() }
            .whereLazy { count++;  println("FILTER ${it.nr}"); it.nr > 47000 }
            .convertLazy { count++; println("Convert ${it.nr}"); it.name.split(" ").last() }
            .whereLazy { count++; it.startsWith("A") }
            .iterator()
            .next()
        assertEquals("Almeida", actual)
        assertEquals(146, count)
    }

    @Test fun `With Sequence Extensions get first surname of a Student with number greater than 4700 and first letter A`() {
        var count = 0;
        val actual = Files
            .lines(lae2022uri.toPath())
            .asSequence()
            .parseCsv(';')
            .map { count++; it.toStudent() }
            .filter { count++; it.nr > 47000 }
            .map { count++; it.name.split(" ").last() }
            .filter { count++; it.startsWith("A") }
            .iterator()
            .next()
        assertEquals("Almeida", actual)
        assertEquals(22, count)
    }
}
